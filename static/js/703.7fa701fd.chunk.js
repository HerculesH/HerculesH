(()=>{var e={495:()=>{},7147:()=>{},1418:()=>{},8741:()=>{},319:()=>{},8386:()=>{},3342:()=>{},5926:()=>{},766:(e,t,n)=>{"use strict";var a=n(4326);function r(e,t,n){for(let a=0;a<n.length;++a)e.setUint8(t+a,n.charCodeAt(a))}var o=n(2791);a.OBj.allowLocalModels=!1;class s extends o.Component{static async getInstance(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return null===this.tokenizer_instance&&(this.tokenizer=a.t25.from_pretrained(this.model_id,{progress_callback:e})),null===this.model_instance&&(this.model_instance=a.Uby.from_pretrained(this.model_id,{quantized:!1,progress_callback:e})),null===this.vocoder_instance&&(this.vocoder_instance=a.WTN.from_pretrained(this.vocoder_id,{quantized:!1,progress_callback:e})),new Promise((async(e,t)=>{const n=await Promise.all([this.tokenizer,this.model_instance,this.vocoder_instance]);self.postMessage({status:"ready"}),e(n)}))}static async getSpeakerEmbeddings(e){const t="".concat(this.BASE_URL).concat(e,".bin");return new a.esB("float32",new Float32Array(await(await fetch(t)).arrayBuffer()),[1,512])}}s.BASE_URL="https://huggingface.co/datasets/Xenova/cmu-arctic-xvectors-extracted/resolve/main/",s.model_id="Xenova/speecht5_tts",s.vocoder_id="Xenova/speecht5_hifigan",s.tokenizer_instance=null,s.model_instance=null,s.vocoder_instance=null;const i=new Map;self.addEventListener("message",(async e=>{const[t,n,a]=await s.getInstance((e=>{self.postMessage(e)})),{input_ids:o}=t(e.data.text);console.log(e.data.text);let c=i.get(e.data.speaker_id);void 0===c&&(c=await s.getSpeakerEmbeddings(e.data.speaker_id),i.set(e.data.speaker_id,c));const{waveform:l}=await n.generate_speech(o,c,{vocoder:a}),d=function(e){let t=44;const n=new ArrayBuffer(t+4*e.length),a=new DataView(n);r(a,0,"RIFF"),a.setUint32(4,36+4*e.length,!0),r(a,8,"WAVE"),r(a,12,"fmt "),a.setUint32(16,16,!0),a.setUint16(20,3,!0),a.setUint16(22,1,!0),a.setUint32(24,16e3,!0),a.setUint32(28,64e3,!0),a.setUint16(32,4,!0),a.setUint16(34,32,!0),r(a,36,"data"),a.setUint32(40,4*e.length,!0);for(let r=0;r<e.length;++r,t+=4)a.setFloat32(t,e[r],!0);return n}(l.data);self.postMessage({status:"complete",output:new Blob([d],{type:"audio/wav"})})}))}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,n),o.exports}n.m=e,n.x=()=>{var e=n.O(void 0,[157,878],(()=>n(766)));return e=n.O(e)},(()=>{var e=[];n.O=(t,a,r,o)=>{if(!a){var s=1/0;for(d=0;d<e.length;d++){a=e[d][0],r=e[d][1],o=e[d][2];for(var i=!0,c=0;c<a.length;c++)(!1&o||s>=o)&&Object.keys(n.O).every((e=>n.O[e](a[c])))?a.splice(c--,1):(i=!1,o<s&&(s=o));if(i){e.splice(d--,1);var l=r();void 0!==l&&(t=l)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[a,r,o]}})(),(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var o=Object.create(null);n.r(o);var s={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>s[e]=()=>a[e]));return s.default=()=>a,n.d(o,s),o}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+"."+{157:"91e78059",878:"ce1c8986"}[e]+".chunk.js",n.miniCssF=e=>{},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="/",(()=>{var e={703:1};n.f.i=(t,a)=>{e[t]||importScripts(n.p+n.u(t))};var t=self.webpackChunkweb_portfolio=self.webpackChunkweb_portfolio||[],a=t.push.bind(t);t.push=t=>{var r=t[0],o=t[1],s=t[2];for(var i in o)n.o(o,i)&&(n.m[i]=o[i]);for(s&&s(n);r.length;)e[r.pop()]=1;a(t)}})(),(()=>{var e=n.x;n.x=()=>Promise.all([n.e(157),n.e(878)]).then(e)})();n.x()})();
//# sourceMappingURL=703.7fa701fd.chunk.js.map